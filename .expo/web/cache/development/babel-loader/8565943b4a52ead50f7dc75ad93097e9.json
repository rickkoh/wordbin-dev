{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rickkoh\\\\Desktop\\\\git\\\\wordbin-dev\\\\node_modules\\\\react-navigation-tabs\\\\src\\\\views\\\\BottomTabBar.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ThemeColors, ThemeContext } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport CrossFadeIcon from \"./CrossFadeIcon\";\nimport withDimensions from \"../utils/withDimensions\";\nvar majorVersion = parseInt(Platform.Version, 10);\nvar isIos = Platform.OS === 'ios';\nvar isIOS11 = majorVersion >= 11 && isIos;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nvar TouchableWithoutFeedbackWrapper = function (_React$Component) {\n  _inherits(TouchableWithoutFeedbackWrapper, _React$Component);\n\n  var _super = _createSuper(TouchableWithoutFeedbackWrapper);\n\n  function TouchableWithoutFeedbackWrapper() {\n    _classCallCheck(this, TouchableWithoutFeedbackWrapper);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TouchableWithoutFeedbackWrapper, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onPress = _this$props.onPress,\n          onLongPress = _this$props.onLongPress,\n          testID = _this$props.testID,\n          accessibilityLabel = _this$props.accessibilityLabel,\n          accessibilityRole = _this$props.accessibilityRole,\n          accessibilityStates = _this$props.accessibilityStates,\n          props = _objectWithoutProperties(_this$props, [\"onPress\", \"onLongPress\", \"testID\", \"accessibilityLabel\", \"accessibilityRole\", \"accessibilityStates\"]);\n\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: onPress,\n        onLongPress: onLongPress,\n        testID: testID,\n        hitSlop: {\n          left: 15,\n          right: 15,\n          top: 0,\n          bottom: 5\n        },\n        accessibilityLabel: accessibilityLabel,\n        accessibilityRole: accessibilityRole,\n        accessibilityStates: accessibilityStates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }, React.createElement(View, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return TouchableWithoutFeedbackWrapper;\n}(React.Component);\n\nvar TabBarBottom = function (_React$Component2) {\n  _inherits(TabBarBottom, _React$Component2);\n\n  var _super2 = _createSuper(TabBarBottom);\n\n  function TabBarBottom() {\n    var _this;\n\n    _classCallCheck(this, TabBarBottom);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n    _this.state = {\n      layout: {\n        height: 0,\n        width: 0\n      },\n      keyboard: false,\n      visible: new Animated.Value(1)\n    };\n\n    _this._handleKeyboardShow = function () {\n      return _this.setState({\n        keyboard: true\n      }, function () {\n        return Animated.timing(_this.state.visible, {\n          toValue: 0,\n          duration: 150,\n          useNativeDriver: true\n        }).start();\n      });\n    };\n\n    _this._handleKeyboardHide = function () {\n      return Animated.timing(_this.state.visible, {\n        toValue: 1,\n        duration: 100,\n        useNativeDriver: true\n      }).start(function () {\n        _this.setState({\n          keyboard: false\n        });\n      });\n    };\n\n    _this._handleLayout = function (e) {\n      var layout = _this.state.layout;\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n          height = _e$nativeEvent$layout.height,\n          width = _e$nativeEvent$layout.width;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      _this.setState({\n        layout: {\n          height: height,\n          width: width\n        }\n      });\n    };\n\n    _this._getActiveTintColor = function () {\n      var activeTintColor = _this.props.activeTintColor;\n\n      if (!activeTintColor) {\n        return;\n      } else if (typeof activeTintColor === 'string') {\n        return activeTintColor;\n      }\n\n      return activeTintColor[_this.context];\n    };\n\n    _this._getInactiveTintColor = function () {\n      var inactiveTintColor = _this.props.inactiveTintColor;\n\n      if (!inactiveTintColor) {\n        return;\n      } else if (typeof inactiveTintColor === 'string') {\n        return inactiveTintColor;\n      }\n\n      return inactiveTintColor[_this.context];\n    };\n\n    _this._getActiveBackgroundColor = function () {\n      var activeBackgroundColor = _this.props.activeBackgroundColor;\n\n      if (!activeBackgroundColor) {\n        return;\n      } else if (typeof activeBackgroundColor === 'string') {\n        return activeBackgroundColor;\n      }\n\n      return activeBackgroundColor[_this.context];\n    };\n\n    _this._getInactiveBackgroundColor = function () {\n      var inactiveBackgroundColor = _this.props.inactiveBackgroundColor;\n\n      if (!inactiveBackgroundColor) {\n        return;\n      } else if (typeof inactiveBackgroundColor === 'string') {\n        return inactiveBackgroundColor;\n      }\n\n      return inactiveBackgroundColor[_this.context];\n    };\n\n    _this._renderLabel = function (_ref) {\n      var route = _ref.route,\n          focused = _ref.focused;\n      var _this$props2 = _this.props,\n          labelStyle = _this$props2.labelStyle,\n          showLabel = _this$props2.showLabel,\n          showIcon = _this$props2.showIcon,\n          allowFontScaling = _this$props2.allowFontScaling;\n\n      if (showLabel === false) {\n        return null;\n      }\n\n      var activeTintColor = _this._getActiveTintColor();\n\n      var inactiveTintColor = _this._getInactiveTintColor();\n\n      var label = _this.props.getLabelText({\n        route: route\n      });\n\n      var tintColor = focused ? activeTintColor : inactiveTintColor;\n\n      if (typeof label === 'string') {\n        return React.createElement(Animated.Text, {\n          numberOfLines: 1,\n          style: [styles.label, {\n            color: tintColor\n          }, showIcon && _this._shouldUseHorizontalLabels() ? styles.labelBeside : styles.labelBeneath, labelStyle],\n          allowFontScaling: allowFontScaling,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 9\n          }\n        }, label);\n      }\n\n      if (typeof label === 'function') {\n        return label({\n          route: route,\n          focused: focused,\n          tintColor: tintColor\n        });\n      }\n\n      return label;\n    };\n\n    _this._renderIcon = function (_ref2) {\n      var route = _ref2.route,\n          focused = _ref2.focused;\n      var _this$props3 = _this.props,\n          navigation = _this$props3.navigation,\n          renderIcon = _this$props3.renderIcon,\n          showIcon = _this$props3.showIcon,\n          showLabel = _this$props3.showLabel;\n\n      if (showIcon === false) {\n        return null;\n      }\n\n      var horizontal = _this._shouldUseHorizontalLabels();\n\n      var activeTintColor = _this._getActiveTintColor();\n\n      var inactiveTintColor = _this._getInactiveTintColor();\n\n      var activeOpacity = focused ? 1 : 0;\n      var inactiveOpacity = focused ? 0 : 1;\n      return React.createElement(CrossFadeIcon, {\n        route: route,\n        horizontal: horizontal,\n        navigation: navigation,\n        activeOpacity: activeOpacity,\n        inactiveOpacity: inactiveOpacity,\n        activeTintColor: activeTintColor,\n        inactiveTintColor: inactiveTintColor,\n        renderIcon: renderIcon,\n        style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this._shouldUseHorizontalLabels = function () {\n      var routes = _this.props.navigation.state.routes;\n      var _this$props4 = _this.props,\n          isLandscape = _this$props4.isLandscape,\n          dimensions = _this$props4.dimensions,\n          adaptive = _this$props4.adaptive,\n          tabStyle = _this$props4.tabStyle;\n\n      if (!adaptive) {\n        return false;\n      }\n\n      if (Platform.isPad) {\n        var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n        var flattenedStyle = StyleSheet.flatten(tabStyle);\n\n        if (flattenedStyle) {\n          if (typeof flattenedStyle.width === 'number') {\n            maxTabItemWidth = flattenedStyle.width;\n          } else if (typeof flattenedStyle.maxWidth === 'number') {\n            maxTabItemWidth = flattenedStyle.maxWidth;\n          }\n        }\n\n        return routes.length * maxTabItemWidth <= dimensions.width;\n      } else {\n        return isLandscape;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TabBarBottom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Platform.OS === 'ios') {\n        Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n        Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n      } else {\n        Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n        Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          navigation = _this$props5.navigation,\n          keyboardHidesTabBar = _this$props5.keyboardHidesTabBar,\n          onTabPress = _this$props5.onTabPress,\n          onTabLongPress = _this$props5.onTabLongPress,\n          safeAreaInset = _this$props5.safeAreaInset,\n          style = _this$props5.style,\n          tabStyle = _this$props5.tabStyle;\n      var routes = navigation.state.routes;\n      var isDark = this.context === 'dark';\n\n      var activeBackgroundColor = this._getActiveBackgroundColor();\n\n      var inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n      var tabBarStyle = [styles.tabBar, isDark ? styles.tabBarDark : styles.tabBarLight, this._shouldUseHorizontalLabels() && !Platform.isPad ? styles.tabBarCompact : styles.tabBarRegular, style];\n      return React.createElement(Animated.View, {\n        style: [styles.container, keyboardHidesTabBar ? {\n          transform: [{\n            translateY: this.state.visible.interpolate({\n              inputRange: [0, 1],\n              outputRange: [this.state.layout.height, 0]\n            })\n          }],\n          position: this.state.keyboard ? 'absolute' : null\n        } : null],\n        pointerEvents: keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto',\n        onLayout: this._handleLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 7\n        }\n      }, React.createElement(SafeAreaView, {\n        style: tabBarStyle,\n        forceInset: safeAreaInset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 9\n        }\n      }, routes.map(function (route, index) {\n        var focused = index === navigation.state.index;\n        var scene = {\n          route: route,\n          focused: focused\n        };\n\n        var accessibilityLabel = _this2.props.getAccessibilityLabel({\n          route: route\n        });\n\n        var accessibilityRole = _this2.props.getAccessibilityRole({\n          route: route\n        });\n\n        var accessibilityStates = _this2.props.getAccessibilityStates(scene);\n\n        var testID = _this2.props.getTestID({\n          route: route\n        });\n\n        var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n        var ButtonComponent = _this2.props.getButtonComponent({\n          route: route\n        }) || TouchableWithoutFeedbackWrapper;\n        return React.createElement(ButtonComponent, {\n          key: route.key,\n          onPress: function onPress() {\n            return onTabPress({\n              route: route\n            });\n          },\n          onLongPress: function onLongPress() {\n            return onTabLongPress({\n              route: route\n            });\n          },\n          testID: testID,\n          accessibilityLabel: accessibilityLabel,\n          accessibilityRole: accessibilityRole,\n          accessibilityStates: accessibilityStates,\n          style: [styles.tab, {\n            backgroundColor: backgroundColor\n          }, _this2._shouldUseHorizontalLabels() ? styles.tabLandscape : styles.tabPortrait, tabStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }\n        }, _this2._renderIcon(scene), _this2._renderLabel(scene));\n      })));\n    }\n  }]);\n\n  return TabBarBottom;\n}(React.Component);\n\nTabBarBottom.contextType = ThemeContext;\nTabBarBottom.defaultProps = {\n  keyboardHidesTabBar: false,\n  activeTintColor: {\n    light: '#007AFF',\n    dark: '#fff'\n  },\n  inactiveTintColor: {\n    light: '#8e8e93',\n    dark: '#7f7f7f'\n  },\n  activeBackgroundColor: 'transparent',\n  inactiveBackgroundColor: 'transparent',\n  showLabel: true,\n  showIcon: true,\n  allowFontScaling: true,\n  adaptive: isIOS11,\n  safeAreaInset: {\n    bottom: 'always',\n    top: 'never'\n  }\n};\nvar DEFAULT_HEIGHT = 49;\nvar COMPACT_HEIGHT = 29;\nvar styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row'\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder\n  },\n  container: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 8\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  iconWithoutLabel: {\n    flex: 1\n  },\n  iconWithLabel: {\n    flex: 1\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 15\n  }\n});\nexport default withDimensions(TabBarBottom);","map":{"version":3,"sources":["C:/Users/rickkoh/Desktop/git/wordbin-dev/node_modules/react-navigation-tabs/src/views/BottomTabBar.js"],"names":["React","ThemeColors","ThemeContext","SafeAreaView","CrossFadeIcon","withDimensions","majorVersion","parseInt","Platform","Version","isIos","OS","isIOS11","DEFAULT_MAX_TAB_ITEM_WIDTH","TouchableWithoutFeedbackWrapper","props","onPress","onLongPress","testID","accessibilityLabel","accessibilityRole","accessibilityStates","left","right","top","bottom","Component","TabBarBottom","state","layout","height","width","keyboard","visible","Animated","Value","_handleKeyboardShow","setState","timing","toValue","duration","useNativeDriver","start","_handleKeyboardHide","_handleLayout","e","nativeEvent","_getActiveTintColor","activeTintColor","context","_getInactiveTintColor","inactiveTintColor","_getActiveBackgroundColor","activeBackgroundColor","_getInactiveBackgroundColor","inactiveBackgroundColor","_renderLabel","route","focused","labelStyle","showLabel","showIcon","allowFontScaling","label","getLabelText","tintColor","styles","color","_shouldUseHorizontalLabels","labelBeside","labelBeneath","_renderIcon","navigation","renderIcon","horizontal","activeOpacity","inactiveOpacity","iconWithExplicitHeight","iconWithoutLabel","iconWithLabel","routes","isLandscape","dimensions","adaptive","tabStyle","isPad","maxTabItemWidth","flattenedStyle","StyleSheet","flatten","maxWidth","length","Keyboard","addListener","removeListener","keyboardHidesTabBar","onTabPress","onTabLongPress","safeAreaInset","style","isDark","tabBarStyle","tabBar","tabBarDark","tabBarLight","tabBarCompact","tabBarRegular","container","transform","translateY","interpolate","inputRange","outputRange","position","map","index","scene","getAccessibilityLabel","getAccessibilityRole","getAccessibilityStates","getTestID","backgroundColor","ButtonComponent","getButtonComponent","key","tab","tabLandscape","tabPortrait","contextType","defaultProps","light","dark","DEFAULT_HEIGHT","COMPACT_HEIGHT","create","borderTopWidth","hairlineWidth","flexDirection","header","borderTopColor","headerBorder","elevation","flex","alignItems","justifyContent","textAlign","fontSize","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport {\n  Animated,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  View,\n  Keyboard,\n  Platform,\n} from 'react-native';\nimport { ThemeColors, ThemeContext } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\n\nimport CrossFadeIcon from './CrossFadeIcon';\nimport withDimensions from '../utils/withDimensions';\n\nexport type ThemedColor = {\n  light: string,\n  dark: string,\n};\n\nexport type TabBarOptions = {\n  keyboardHidesTabBar: boolean,\n  activeTintColor?: string | ThemedColor,\n  inactiveTintColor?: string | ThemedColor,\n  activeBackgroundColor?: string | ThemedColor,\n  inactiveBackgroundColor?: string | ThemedColor,\n  allowFontScaling: boolean,\n  showLabel: boolean,\n  showIcon: boolean,\n  labelStyle: any,\n  tabStyle: any,\n  adaptive?: boolean,\n  style: any,\n};\n\ntype Props = TabBarOptions & {\n  navigation: any,\n  descriptors: any,\n  jumpTo: any,\n  onTabPress: any,\n  onTabLongPress: any,\n  getAccessibilityLabel: (props: { route: any }) => string,\n  getAccessibilityRole: (props: { route: any }) => string,\n  getAccessibilityStates: (props: { route: any }) => string[],\n  getButtonComponent: ({ route: any }) => any,\n  getLabelText: ({ route: any }) => any,\n  getTestID: (props: { route: any }) => string,\n  renderIcon: any,\n  dimensions: { width: number, height: number },\n  isLandscape: boolean,\n  safeAreaInset: { top: string, right: string, bottom: string, left: string },\n};\n\ntype State = {\n  layout: { height: number, width: number },\n  keyboard: boolean,\n  visible: Animated.Value,\n};\n\nconst majorVersion = parseInt(Platform.Version, 10);\nconst isIos = Platform.OS === 'ios';\nconst isIOS11 = majorVersion >= 11 && isIos;\n\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nclass TouchableWithoutFeedbackWrapper extends React.Component<*> {\n  render() {\n    const {\n      onPress,\n      onLongPress,\n      testID,\n      accessibilityLabel,\n      accessibilityRole,\n      accessibilityStates,\n      ...props\n    } = this.props;\n\n    return (\n      <TouchableWithoutFeedback\n        onPress={onPress}\n        onLongPress={onLongPress}\n        testID={testID}\n        hitSlop={{ left: 15, right: 15, top: 0, bottom: 5 }}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole={accessibilityRole}\n        accessibilityStates={accessibilityStates}\n      >\n        <View {...props} />\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nclass TabBarBottom extends React.Component<Props, State> {\n  static contextType = ThemeContext;\n\n  static defaultProps = {\n    keyboardHidesTabBar: false,\n    activeTintColor: {\n      light: '#007AFF',\n      dark: '#fff',\n    },\n    inactiveTintColor: {\n      light: '#8e8e93',\n      dark: '#7f7f7f',\n    },\n    activeBackgroundColor: 'transparent',\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: isIOS11,\n    safeAreaInset: { bottom: 'always', top: 'never' },\n  };\n\n  state = {\n    layout: { height: 0, width: 0 },\n    keyboard: false,\n    visible: new Animated.Value(1),\n  };\n\n  componentDidMount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  _handleKeyboardShow = () =>\n    this.setState({ keyboard: true }, () =>\n      Animated.timing(this.state.visible, {\n        toValue: 0,\n        duration: 150,\n        useNativeDriver: true,\n      }).start()\n    );\n\n  _handleKeyboardHide = () =>\n    Animated.timing(this.state.visible, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: true,\n    }).start(() => {\n      this.setState({ keyboard: false });\n    });\n\n  _handleLayout = e => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n      },\n    });\n  };\n\n  _getActiveTintColor = () => {\n    let { activeTintColor } = this.props;\n    if (!activeTintColor) {\n      return;\n    } else if (typeof activeTintColor === 'string') {\n      return activeTintColor;\n    }\n\n    return activeTintColor[this.context];\n  };\n\n  _getInactiveTintColor = () => {\n    let { inactiveTintColor } = this.props;\n    if (!inactiveTintColor) {\n      return;\n    } else if (typeof inactiveTintColor === 'string') {\n      return inactiveTintColor;\n    }\n\n    return inactiveTintColor[this.context];\n  };\n\n  _getActiveBackgroundColor = () => {\n    let { activeBackgroundColor } = this.props;\n    if (!activeBackgroundColor) {\n      return;\n    } else if (typeof activeBackgroundColor === 'string') {\n      return activeBackgroundColor;\n    }\n\n    return activeBackgroundColor[this.context];\n  };\n\n  _getInactiveBackgroundColor = () => {\n    let { inactiveBackgroundColor } = this.props;\n    if (!inactiveBackgroundColor) {\n      return;\n    } else if (typeof inactiveBackgroundColor === 'string') {\n      return inactiveBackgroundColor;\n    }\n\n    return inactiveBackgroundColor[this.context];\n  };\n\n  _renderLabel = ({ route, focused }) => {\n    const { labelStyle, showLabel, showIcon, allowFontScaling } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const label = this.props.getLabelText({ route });\n    const tintColor = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color: tintColor },\n            showIcon && this._shouldUseHorizontalLabels()\n              ? styles.labelBeside\n              : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'function') {\n      return label({ route, focused, tintColor });\n    }\n\n    return label;\n  };\n\n  _renderIcon = ({ route, focused }) => {\n    const { navigation, renderIcon, showIcon, showLabel } = this.props;\n    if (showIcon === false) {\n      return null;\n    }\n\n    const horizontal = this._shouldUseHorizontalLabels();\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <CrossFadeIcon\n        route={route}\n        horizontal={horizontal}\n        navigation={navigation}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        style={[\n          styles.iconWithExplicitHeight,\n          showLabel === false && !horizontal && styles.iconWithoutLabel,\n          showLabel !== false && !horizontal && styles.iconWithLabel,\n        ]}\n      />\n    );\n  };\n\n  _shouldUseHorizontalLabels = () => {\n    const { routes } = this.props.navigation.state;\n    const { isLandscape, dimensions, adaptive, tabStyle } = this.props;\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (Platform.isPad) {\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= dimensions.width;\n    } else {\n      return isLandscape;\n    }\n  };\n\n  render() {\n    const {\n      navigation,\n      keyboardHidesTabBar,\n      onTabPress,\n      onTabLongPress,\n      safeAreaInset,\n      style,\n      tabStyle,\n    } = this.props;\n\n    const { routes } = navigation.state;\n    const isDark = this.context === 'dark';\n\n    const activeBackgroundColor = this._getActiveBackgroundColor();\n    const inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n    const tabBarStyle = [\n      styles.tabBar,\n      isDark ? styles.tabBarDark : styles.tabBarLight,\n      this._shouldUseHorizontalLabels() && !Platform.isPad\n        ? styles.tabBarCompact\n        : styles.tabBarRegular,\n      style,\n    ];\n\n    return (\n      <Animated.View\n        style={[\n          styles.container,\n          keyboardHidesTabBar\n            ? {\n                // When the keyboard is shown, slide down the tab bar\n                transform: [\n                  {\n                    translateY: this.state.visible.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [this.state.layout.height, 0],\n                    }),\n                  },\n                ],\n                // Absolutely position the tab bar so that the content is below it\n                // This is needed to avoid gap at bottom when the tab bar is hidden\n                position: this.state.keyboard ? 'absolute' : null,\n              }\n            : null,\n        ]}\n        pointerEvents={\n          keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto'\n        }\n        onLayout={this._handleLayout}\n      >\n        <SafeAreaView style={tabBarStyle} forceInset={safeAreaInset}>\n          {routes.map((route, index) => {\n            const focused = index === navigation.state.index;\n            const scene = { route, focused };\n            const accessibilityLabel = this.props.getAccessibilityLabel({\n              route,\n            });\n\n            const accessibilityRole = this.props.getAccessibilityRole({\n              route,\n            });\n\n            const accessibilityStates = this.props.getAccessibilityStates(\n              scene\n            );\n\n            const testID = this.props.getTestID({ route });\n\n            const backgroundColor = focused\n              ? activeBackgroundColor\n              : inactiveBackgroundColor;\n\n            const ButtonComponent =\n              this.props.getButtonComponent({ route }) ||\n              TouchableWithoutFeedbackWrapper;\n\n            return (\n              <ButtonComponent\n                key={route.key}\n                onPress={() => onTabPress({ route })}\n                onLongPress={() => onTabLongPress({ route })}\n                testID={testID}\n                accessibilityLabel={accessibilityLabel}\n                accessibilityRole={accessibilityRole}\n                accessibilityStates={accessibilityStates}\n                style={[\n                  styles.tab,\n                  { backgroundColor },\n                  this._shouldUseHorizontalLabels()\n                    ? styles.tabLandscape\n                    : styles.tabPortrait,\n                  tabStyle,\n                ]}\n              >\n                {this._renderIcon(scene)}\n                {this._renderLabel(scene)}\n              </ButtonComponent>\n            );\n          })}\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nconst DEFAULT_HEIGHT = 49;\nconst COMPACT_HEIGHT = 29;\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row',\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder,\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder,\n  },\n  container: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 8,\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT,\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT,\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconWithoutLabel: {\n    flex: 1,\n  },\n  iconWithLabel: {\n    flex: 1,\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT,\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 15,\n  },\n});\n\nexport default withDimensions(TabBarBottom);\n"]},"metadata":{},"sourceType":"module"}