{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rickkoh\\\\Desktop\\\\git\\\\wordbin-dev\\\\src\\\\components\\\\FlatListWithCollapsibleHeader.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { STATUS_BAR_HEIGHT, colors } from \"../Styles\";\n\nvar FlatListWithCollapsibleHeader = function (_React$Component) {\n  _inherits(FlatListWithCollapsibleHeader, _React$Component);\n\n  var _super = _createSuper(FlatListWithCollapsibleHeader);\n\n  function FlatListWithCollapsibleHeader(props) {\n    var _this;\n\n    _classCallCheck(this, FlatListWithCollapsibleHeader);\n\n    _this = _super.call(this, props);\n    _this.containerPaddingTop = _this.props.containerPaddingTop != undefined ? _this.props.containerPaddingTop : 0;\n    _this.containerPaddingBottom = _this.props.containerPaddingBottom != undefined ? _this.props.containerPaddingBottom : 0;\n    _this.navHeight = _this.props.navHeight != undefined ? _this.props.navHeight : 0;\n    _this.NAVBAR_HEIGHT = _this.navHeight + _this.containerPaddingTop + _this.containerPaddingBottom + STATUS_BAR_HEIGHT + 5;\n\n    _this._onMomentumScrollEnd = function () {\n      var toValue = _this._scrollValue > _this.NAVBAR_HEIGHT && _this._clampedScrollValue > (_this.NAVBAR_HEIGHT - STATUS_BAR_HEIGHT) / 2 ? _this._offsetValue + _this.NAVBAR_HEIGHT : _this._offsetValue - _this.NAVBAR_HEIGHT;\n      Animated.timing(_this.state.offsetAnim, {\n        toValue: toValue,\n        duration: 350,\n        useNativeDriver: true\n      }).start();\n    };\n\n    var scrollAnim = new Animated.Value(0);\n    var offsetAnim = new Animated.Value(0);\n    _this.state = {\n      scrollAnim: scrollAnim,\n      offsetAnim: offsetAnim,\n      clampedScroll: Animated.diffClamp(Animated.add(scrollAnim.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, 1],\n        extrapolateLeft: 'clamp'\n      }), offsetAnim), 0, _this.NAVBAR_HEIGHT - STATUS_BAR_HEIGHT)\n    };\n    return _this;\n  }\n\n  _createClass(FlatListWithCollapsibleHeader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.state.scrollAnim.addListener(function (_ref) {\n        var value = _ref.value;\n        var diff = value - _this2._scrollValue;\n        _this2._scrollValue = value;\n        _this2._clampedScrollValue = Math.min(Math.max(_this2._clampedScrollValue + diff, 0), _this2.NAVBAR_HEIGHT - STATUS_BAR_HEIGHT);\n      });\n      this.state.offsetAnim.addListener(function (_ref2) {\n        var value = _ref2.value;\n        _this2._offsetValue = value;\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.state.scrollAnim.removeAllListeners();\n      this.state.offsetAnim.removeAllListeners();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clampedScroll = this.state.clampedScroll;\n      var navbarTranslate = clampedScroll.interpolate({\n        inputRange: [0, this.NAVBAR_HEIGHT - STATUS_BAR_HEIGHT],\n        outputRange: [0, -(this.NAVBAR_HEIGHT - STATUS_BAR_HEIGHT)],\n        extrapolate: 'clamp'\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, React.createElement(Animated.FlatList, {\n        data: this.props.data,\n        renderItem: this.props.renderItem,\n        keyExtractor: this.props.keyExtractor,\n        style: [this.props.style],\n        contentContainerStyle: [{\n          paddingTop: this.NAVBAR_HEIGHT\n        }, this.props.contentContainerStyle],\n        scrollEventThrottle: 1,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: this.state.scrollAnim\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }), React.createElement(Animated.View, {\n        style: [styles.navBar, {\n          height: this.props.navHeight,\n          marginTop: this.containerPaddingTop + STATUS_BAR_HEIGHT,\n          marginBottom: this.containerPaddingBottom\n        }, {\n          transform: [{\n            translateY: navbarTranslate\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, this.props.header), React.createElement(View, {\n        style: styles.statusBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return FlatListWithCollapsibleHeader;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  statusBar: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: STATUS_BAR_HEIGHT,\n    backgroundColor: colors.default.white\n  },\n  navBar: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  },\n  boxWithShadow: {\n    marginBottom: 5,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3\n  }\n});\nexport default FlatListWithCollapsibleHeader;","map":{"version":3,"sources":["C:/Users/rickkoh/Desktop/git/wordbin-dev/src/components/FlatListWithCollapsibleHeader.js"],"names":["React","STATUS_BAR_HEIGHT","colors","FlatListWithCollapsibleHeader","props","containerPaddingTop","undefined","containerPaddingBottom","navHeight","NAVBAR_HEIGHT","_onMomentumScrollEnd","toValue","_scrollValue","_clampedScrollValue","_offsetValue","Animated","timing","state","offsetAnim","duration","useNativeDriver","start","scrollAnim","Value","clampedScroll","diffClamp","add","interpolate","inputRange","outputRange","extrapolateLeft","addListener","value","diff","Math","min","max","removeAllListeners","navbarTranslate","extrapolate","styles","container","data","renderItem","keyExtractor","style","paddingTop","contentContainerStyle","event","nativeEvent","contentOffset","y","navBar","height","marginTop","marginBottom","transform","translateY","header","statusBar","Component","StyleSheet","create","flex","position","top","left","right","backgroundColor","default","white","boxWithShadow","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Animated, StyleSheet, View } from 'react-native';\r\nimport { STATUS_BAR_HEIGHT, colors } from '../Styles';\r\n\r\nclass FlatListWithCollapsibleHeader extends React.Component {\r\n\r\n    containerPaddingTop = this.props.containerPaddingTop != undefined ? this.props.containerPaddingTop : 0;\r\n    containerPaddingBottom = this.props.containerPaddingBottom != undefined ? this.props.containerPaddingBottom : 0;\r\n    navHeight = this.props.navHeight != undefined ? this.props.navHeight : 0;\r\n    NAVBAR_HEIGHT = this.navHeight + this.containerPaddingTop + this.containerPaddingBottom + STATUS_BAR_HEIGHT + 5;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const scrollAnim = new Animated.Value(0);\r\n        const offsetAnim = new Animated.Value(0);\r\n\r\n        this.state={\r\n            scrollAnim,\r\n            offsetAnim,\r\n            clampedScroll: Animated.diffClamp(\r\n                Animated.add(\r\n                    scrollAnim.interpolate({\r\n                        inputRange: [0, 1],\r\n                        outputRange: [0, 1],\r\n                        extrapolateLeft: 'clamp',\r\n                    }),\r\n                    offsetAnim,\r\n                ),\r\n                0,\r\n                this.NAVBAR_HEIGHT - STATUS_BAR_HEIGHT,\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.scrollAnim.addListener(({ value }) => {\r\n\r\n            const diff = value - this._scrollValue;\r\n\r\n            this._scrollValue = value;\r\n\r\n            this._clampedScrollValue = Math.min(\r\n                Math.max(this._clampedScrollValue + diff, 0),\r\n                this.NAVBAR_HEIGHT - STATUS_BAR_HEIGHT,\r\n            )\r\n        })\r\n\r\n        this.state.offsetAnim.addListener(({ value }) => {\r\n            this._offsetValue = value;\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.state.scrollAnim.removeAllListeners();\r\n        this.state.offsetAnim.removeAllListeners();\r\n    }\r\n\r\n    _onMomentumScrollEnd = () => {\r\n        const toValue = this._scrollValue > this.NAVBAR_HEIGHT &&\r\n                        this._clampedScrollValue > (this.NAVBAR_HEIGHT - STATUS_BAR_HEIGHT) / 2\r\n                        ? this._offsetValue + this.NAVBAR_HEIGHT\r\n                        : this._offsetValue - this.NAVBAR_HEIGHT\r\n\r\n        Animated.timing(this.state.offsetAnim, {\r\n            toValue,\r\n            duration: 350,\r\n            useNativeDriver: true,\r\n        }).start();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { clampedScroll } = this.state;\r\n\r\n        const navbarTranslate = clampedScroll.interpolate({\r\n            inputRange: [0, this.NAVBAR_HEIGHT - STATUS_BAR_HEIGHT],\r\n            outputRange: [0, -(this.NAVBAR_HEIGHT - STATUS_BAR_HEIGHT)],\r\n            extrapolate: 'clamp',\r\n        })\r\n\r\n        return(\r\n            <View style={styles.container}>\r\n                <Animated.FlatList\r\n                    data={this.props.data}\r\n                    renderItem={this.props.renderItem}\r\n                    keyExtractor={this.props.keyExtractor}\r\n                    style={[this.props.style]}\r\n                    contentContainerStyle={[{paddingTop: this.NAVBAR_HEIGHT}, this.props.contentContainerStyle]}\r\n                    scrollEventThrottle={1}\r\n                    onScroll={Animated.event(\r\n                        [{ nativeEvent: { contentOffset: { y: this.state.scrollAnim } } }],\r\n                        { useNativeDriver: true },\r\n                    )}\r\n                />\r\n                <Animated.View style={[styles.navBar, {height: this.props.navHeight, marginTop: this.containerPaddingTop + STATUS_BAR_HEIGHT, marginBottom: this.containerPaddingBottom}, { transform: [{ translateY: navbarTranslate }]}]}>\r\n                    {this.props.header}\r\n                </Animated.View>\r\n                <View style={styles.statusBar}></View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n    statusBar: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        height: STATUS_BAR_HEIGHT,\r\n        backgroundColor: colors.default.white,\r\n    },\r\n    navBar: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    boxWithShadow: {\r\n        marginBottom: 5,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n        },\r\n        shadowOpacity: 0.22,\r\n        shadowRadius: 2.22,\r\n\r\n        elevation: 3,\r\n    }\r\n})\r\n\r\nexport default FlatListWithCollapsibleHeader;\r\n"]},"metadata":{},"sourceType":"module"}