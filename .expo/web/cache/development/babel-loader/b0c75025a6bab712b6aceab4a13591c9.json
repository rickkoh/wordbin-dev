{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rickkoh\\\\Desktop\\\\git\\\\wordbin-dev\\\\src\\\\components\\\\WordCard.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Icon } from 'react-native-elements';\nimport { withNavigation } from 'react-navigation';\nimport Modal from 'react-native-modal';\nimport { WebView } from 'react-native-webview';\nimport { colors, STATUS_BAR_HEIGHT, SCREEN_HEIGHT } from \"../Styles\";\nimport Menu, { MenuItem, MenuDivider } from 'react-native-material-menu';\nimport { TouchableOpacity, TextInput } from 'react-native-gesture-handler';\nimport database from \"../services/Database\";\nimport MeaningInformation from \"../components/Information/MeaningInformation\";\nimport EditableWordCardModal from \"./EditableWordCardModal\";\nimport WordBrowser from \"./WordBrowser\";\nimport HorizontalList from \"./HorizontalList\";\nimport Tag from \"./Tag\";\n\nvar WordCard = function (_React$Component) {\n  _inherits(WordCard, _React$Component);\n\n  var _super = _createSuper(WordCard);\n\n  function WordCard(props) {\n    var _this;\n\n    _classCallCheck(this, WordCard);\n\n    _this = _super.call(this, props);\n\n    _this.toggleModalVisibility = function () {\n      _this.setState(function (prevState) {\n        return {\n          isModalVisible: !prevState.isModalVisible\n        };\n      });\n    };\n\n    _this._renderHeader = function () {\n      return React.createElement(View, {\n        style: {\n          alignItems: 'flex-end'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          paddingLeft: 10,\n          paddingRight: 5\n        },\n        onPress: function onPress() {\n          _this._menu.show();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, \"...\"), _this._renderMenu()));\n    };\n\n    _this._renderMenu = function () {\n      return React.createElement(Menu, {\n        ref: function ref(_ref) {\n          return _this._menu = _ref;\n        },\n        style: {\n          backgroundColor: 'black'\n        },\n        onHidden: function onHidden() {\n          _this.onMenuHidden ? _this.onMenuHidden : null;\n          _this.onMenuHidden = null;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, React.createElement(MenuItem, {\n        onPress: function onPress() {\n          console.log('Hide ' + _this.state.word.word_text);\n\n          _this.hideMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, \"Hide\")), React.createElement(MenuItem, {\n        onPress: function onPress() {\n          console.log('Edit ' + _this.state.word.word_text);\n\n          _this.onMenuHidden = function () {\n            _this.setState({\n              isCardModalVisible: true\n            });\n\n            _this.cardModal.setIsEditable();\n          };\n\n          _this.hideMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }, \"Edit\")), React.createElement(MenuItem, {\n        onPress: function onPress() {\n          console.log('Move item up');\n\n          _this.hideMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, \"Shift Up\")), React.createElement(MenuItem, {\n        onPress: function onPress() {\n          console.log('Move item down');\n\n          _this.hideMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, \"Shift Down\")), React.createElement(MenuItem, {\n        onPress: function onPress() {\n          database.deleteWord(_this.state.word.word_id).then(function () {\n            return DeviceEventEmitter.emit('database_changed');\n          });\n\n          _this.hideMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }, \"Delete\")));\n    };\n\n    _this.state = {\n      isModalVisible: false,\n      isCardModalVisible: false,\n      word: _this.props.word\n    };\n    return _this;\n  }\n\n  _createClass(WordCard, [{\n    key: \"hideMenu\",\n    value: function hideMenu() {\n      this._menu.hide();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: [{\n          minHeight: 20,\n          margin: 10,\n          marginBottom: 0,\n          padding: 10,\n          borderRadius: 10,\n          backgroundColor: 'white'\n        }, styles.boxWithShadow],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, this._renderHeader(), React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginBottom: 5\n        },\n        onPress: function onPress() {\n          return _this2.setState({\n            isCardModalVisible: !_this2.state.isCardModalVisible\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, this.state.word.word_text), this.state.word.word_pronunciation == undefined ? null : React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          marginBottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, this.state.word.word_pronunciation), React.createElement(MeaningInformation, {\n        data: this.state.word.Meanings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }), React.createElement(HorizontalList, {\n        headerText: \"Tags\",\n        headerStyle: {\n          margin: 5,\n          marginLeft: 0\n        },\n        headerTextStyle: {\n          color: 'green'\n        },\n        data: this.state.word.Tags,\n        renderItem: function renderItem(tag, index) {\n          return React.createElement(View, {\n            style: {\n              margin: 5,\n              marginLeft: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }\n          }, React.createElement(Tag, {\n            value: tag.tag_title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          alignItems: 'flex-end'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.toggleModalVisibility,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/googlelogo1.jpg\"),\n        style: {\n          height: 20,\n          width: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }))), React.createElement(EditableWordCardModal, {\n        ref: function ref(_ref2) {\n          return _this2.cardModal = _ref2;\n        },\n        isVisible: this.state.isCardModalVisible,\n        onDoneButtonPress: function onDoneButtonPress() {\n          return _this2.setState({\n            isCardModalVisible: false\n          });\n        },\n        onBackdropPress: function onBackdropPress() {\n          return _this2.setState(function (prevState) {\n            return {\n              isCardModalVisible: !prevState.isCardModalVisible\n            };\n          });\n        },\n        word: this.state.word,\n        onWordDataHasChanged: function onWordDataHasChanged(word) {\n          return _this2.setState({\n            word: word\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }), React.createElement(WordBrowser, {\n        isVisible: this.state.isModalVisible,\n        word: this.state.word.word_text,\n        onCloseButtonPress: function onCloseButtonPress() {\n          return _this2.setState({\n            isModalVisible: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return WordCard;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  boxWithShadow: {\n    marginBottom: 5,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3\n  }\n});\nexport default withNavigation(WordCard);","map":{"version":3,"sources":["C:/Users/rickkoh/Desktop/git/wordbin-dev/src/components/WordCard.js"],"names":["React","Icon","withNavigation","Modal","WebView","colors","STATUS_BAR_HEIGHT","SCREEN_HEIGHT","Menu","MenuItem","MenuDivider","TouchableOpacity","TextInput","database","MeaningInformation","EditableWordCardModal","WordBrowser","HorizontalList","Tag","WordCard","props","toggleModalVisibility","setState","prevState","isModalVisible","_renderHeader","alignItems","paddingLeft","paddingRight","_menu","show","fontWeight","_renderMenu","ref","backgroundColor","onMenuHidden","console","log","state","word","word_text","hideMenu","color","isCardModalVisible","cardModal","setIsEditable","deleteWord","word_id","then","DeviceEventEmitter","emit","hide","minHeight","margin","marginBottom","padding","borderRadius","styles","boxWithShadow","fontSize","word_pronunciation","undefined","Meanings","marginLeft","Tags","tag","index","tag_title","require","height","width","Component","StyleSheet","create","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, ScrollView, DeviceEventEmitter, StyleSheet, Text, Image } from 'react-native';\r\nimport { Icon } from 'react-native-elements';\r\nimport { withNavigation } from 'react-navigation';\r\n\r\nimport Modal from 'react-native-modal';\r\nimport { WebView } from 'react-native-webview';\r\n\r\nimport { colors, STATUS_BAR_HEIGHT, SCREEN_HEIGHT } from '../Styles';\r\n\r\nimport Menu, { MenuItem, MenuDivider } from 'react-native-material-menu';\r\n\r\nimport { TouchableOpacity, TextInput } from 'react-native-gesture-handler';\r\nimport database from '../services/Database';\r\n\r\nimport MeaningInformation from '../components/Information/MeaningInformation';\r\nimport EditableWordCardModal from './EditableWordCardModal';\r\nimport WordBrowser from './WordBrowser';\r\nimport HorizontalList from './HorizontalList';\r\nimport Tag from './Tag';\r\n\r\n// Takes in a\r\nclass WordCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalVisible: false,\r\n            isCardModalVisible: false,\r\n            word: this.props.word,\r\n        }\r\n    }\r\n\r\n    hideMenu() {\r\n        this._menu.hide();\r\n    }\r\n\r\n    toggleModalVisibility = () => {\r\n        this.setState(prevState => ({isModalVisible: !prevState.isModalVisible}))\r\n    }\r\n\r\n    render() {\r\n\r\n        // Render WordCard\r\n        return(\r\n            <View style={[{ minHeight: 20, margin: 10, marginBottom: 0, padding: 10, borderRadius: 10, backgroundColor: 'white'}, styles.boxWithShadow]}>\r\n                {\r\n                    // Header\r\n                    this._renderHeader()\r\n                }\r\n                {\r\n                    // Title\r\n                }\r\n                <Text style={{fontSize: 20, marginBottom: 5}} onPress={() => this.setState({isCardModalVisible: !this.state.isCardModalVisible})}>{this.state.word.word_text}</Text>\r\n                {\r\n                    // Pronunciation\r\n                }\r\n                {this.state.word.word_pronunciation == undefined ? null : (\r\n                    <Text style={{fontSize: 12, marginBottom: 5 }}>{this.state.word.word_pronunciation}</Text>\r\n                )}\r\n                {\r\n                    // Meanings\r\n                }\r\n                <MeaningInformation\r\n                    data={this.state.word.Meanings}\r\n                />\r\n                {\r\n                    // Tags\r\n                }\r\n                <HorizontalList\r\n                    headerText=\"Tags\"\r\n                    headerStyle={{margin: 5, marginLeft: 0}}\r\n                    headerTextStyle={{color: 'green'}}\r\n                    data={this.state.word.Tags}\r\n                    renderItem={(tag, index) => (\r\n                        <View style={{margin: 5, marginLeft: 0}}>\r\n                            <Tag value={tag.tag_title}/>\r\n                        </View>\r\n                    )}\r\n                />\r\n                {\r\n                    // Google Search Button\r\n                }\r\n                <View style={{alignItems: 'flex-end'}}>\r\n                    <TouchableOpacity onPress={this.toggleModalVisibility}>\r\n                        <Image source={require('../assets/googlelogo1.jpg')} style={{height: 20, width: 20}}></Image>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                {\r\n                    // Browser\r\n                }\r\n                <EditableWordCardModal\r\n                    ref={(ref) => this.cardModal = ref}\r\n                    isVisible={this.state.isCardModalVisible}\r\n                    onDoneButtonPress={() => this.setState({isCardModalVisible: false})}\r\n                    onBackdropPress={() => this.setState(prevState => ({isCardModalVisible: !prevState.isCardModalVisible}))}\r\n                    word={this.state.word}\r\n                    onWordDataHasChanged={(word) => this.setState({word: word})}\r\n                    // onWordDataChange={(word) => console.log(word)}\r\n                />\r\n                <WordBrowser isVisible={this.state.isModalVisible} word={this.state.word.word_text} onCloseButtonPress={() => this.setState({isModalVisible: false})}/>\r\n                {\r\n                    // WordCardModal\r\n                }\r\n            </View>\r\n        )\r\n    }\r\n\r\n    _renderHeader = () => {\r\n        return (\r\n            <View style={{alignItems: 'flex-end'}}>\r\n                {\r\n                    // Menu\r\n                }\r\n                <TouchableOpacity style={{paddingLeft: 10, paddingRight: 5}} onPress={() => {\r\n                    this._menu.show();\r\n                }}>\r\n                    <Text style={{fontWeight: 'bold'}}>...</Text>\r\n                    {this._renderMenu()}\r\n                </TouchableOpacity>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    _renderMenu = () => {\r\n        return(\r\n            <Menu ref={(ref) => this._menu = ref} style={{backgroundColor: 'black'}} onHidden={() => {this.onMenuHidden ? this.onMenuHidden : null; this.onMenuHidden = null;}}>\r\n                <MenuItem onPress={() => {\r\n                    console.log('Hide ' + this.state.word.word_text);\r\n                    this.hideMenu();\r\n                }}>\r\n                    <Text style={{color: 'white'}}>Hide</Text>\r\n                </MenuItem>\r\n                <MenuItem onPress={() => {\r\n                    console.log('Edit ' + this.state.word.word_text);\r\n                    this.onMenuHidden = () => {this.setState({isCardModalVisible: true}); this.cardModal.setIsEditable();};\r\n                    this.hideMenu();\r\n                }}>\r\n                    <Text style={{color: 'white'}}>Edit</Text>\r\n                </MenuItem>\r\n                <MenuItem onPress={() => {\r\n                    console.log('Move item up');\r\n                    this.hideMenu();\r\n                }}>\r\n                    <Text style={{color: 'white'}}>Shift Up</Text>\r\n                </MenuItem>\r\n                <MenuItem onPress={() => {\r\n                    console.log('Move item down');\r\n                    this.hideMenu();\r\n                }}>\r\n                    <Text style={{color: 'white'}}>Shift Down</Text>\r\n                </MenuItem>\r\n                <MenuItem onPress={() => {\r\n                    database.deleteWord(this.state.word.word_id).then(() => DeviceEventEmitter.emit('database_changed'));\r\n                    this.hideMenu();\r\n                }}>\r\n                    <Text style={{color: 'white'}}>Delete</Text>\r\n                </MenuItem>\r\n            </Menu>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    boxWithShadow: {\r\n        marginBottom: 5,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n        },\r\n        shadowOpacity: 0.22,\r\n        shadowRadius: 2.22,\r\n        elevation: 3,\r\n    }\r\n})\r\n\r\nexport default withNavigation(WordCard);\r\n"]},"metadata":{},"sourceType":"module"}