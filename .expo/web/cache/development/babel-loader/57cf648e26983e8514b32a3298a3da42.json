{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rickkoh\\\\Desktop\\\\git\\\\wordbin-dev\\\\src\\\\screens\\\\Home.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Icon } from 'react-native-elements';\nimport ignoreWarnings from 'react-native-ignore-warnings';\nimport { headerStyles, colors, SCREEN_HEIGHT } from \"../Styles\";\nimport Menu, { MenuItem, MenuDivider } from 'react-native-material-menu';\nimport WordCard from \"../components/WordCard\";\nimport AddWordCard from \"../components/AddWordCard\";\nimport AddActionButton from \"../components/Buttons/AddActionButton\";\nimport database from \"../services/Database\";\nimport FlatListWithCollapsibleHeader from \"../components/FlatListWithCollapsibleHeader\";\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.refreshData = function () {\n      console.log(\"refresh data called\");\n      _this.state.title = \"Home\";\n\n      _this.loadData().then(function (data) {\n        return _this.setState(data);\n      });\n    };\n\n    _this.loadData = function (opts, args) {\n      entities = {};\n\n      function asyncForEach(array, callback) {\n        var index;\n        return _regeneratorRuntime.async(function asyncForEach$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                index = 0;\n\n              case 1:\n                if (!(index < array.length)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(callback(array[index], index, array));\n\n              case 4:\n                index++;\n                _context.next = 1;\n                break;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n\n      if (opts == \"tag\") {\n        return new Promise(function _callee2(resolve, reject) {\n          return _regeneratorRuntime.async(function _callee2$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return _regeneratorRuntime.awrap(database.getWordsByTags(args[0]).then(function _callee(data) {\n                    return _regeneratorRuntime.async(function _callee$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            entities.Words = data;\n                            _context2.next = 3;\n                            return _regeneratorRuntime.awrap(clip(data));\n\n                          case 3:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, null, null, null, Promise);\n                  }).then(function () {\n                    return resolve(entities);\n                  }).catch(function (error) {\n                    return reject(error);\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        });\n      } else {\n        return new Promise(function _callee4(resolve, reject) {\n          return _regeneratorRuntime.async(function _callee4$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return _regeneratorRuntime.awrap(database.getWords().then(function _callee3(data) {\n                    return _regeneratorRuntime.async(function _callee3$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            entities.Words = data;\n                            _context4.next = 3;\n                            return _regeneratorRuntime.awrap(clip(data));\n\n                          case 3:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, null, null, null, Promise);\n                  }).then(function () {\n                    return resolve(entities);\n                  }).catch(function (error) {\n                    return reject(error);\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        });\n      }\n\n      function clip(data) {\n        return _regeneratorRuntime.async(function clip$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return _regeneratorRuntime.awrap(asyncForEach(data, function _callee9(word, word_index) {\n                  return _regeneratorRuntime.async(function _callee9$(_context10) {\n                    while (1) {\n                      switch (_context10.prev = _context10.next) {\n                        case 0:\n                          _context10.next = 2;\n                          return _regeneratorRuntime.awrap(database.getWordTags(word.word_id).then(function _callee5(data) {\n                            return _regeneratorRuntime.async(function _callee5$(_context6) {\n                              while (1) {\n                                switch (_context6.prev = _context6.next) {\n                                  case 0:\n                                    entities.Words[word_index].Tags = data;\n\n                                  case 1:\n                                  case \"end\":\n                                    return _context6.stop();\n                                }\n                              }\n                            }, null, null, null, Promise);\n                          }).catch(function (error) {\n                            return reject(error);\n                          }));\n\n                        case 2:\n                          _context10.next = 4;\n                          return _regeneratorRuntime.awrap(database.getMeanings(word.word_id).then(function _callee8(data) {\n                            return _regeneratorRuntime.async(function _callee8$(_context9) {\n                              while (1) {\n                                switch (_context9.prev = _context9.next) {\n                                  case 0:\n                                    entities.Words[word_index].Meanings = data;\n                                    _context9.next = 3;\n                                    return _regeneratorRuntime.awrap(asyncForEach(data, function _callee7(meaning, meaning_index) {\n                                      return _regeneratorRuntime.async(function _callee7$(_context8) {\n                                        while (1) {\n                                          switch (_context8.prev = _context8.next) {\n                                            case 0:\n                                              _context8.next = 2;\n                                              return _regeneratorRuntime.awrap(database.getWordSynonym(meaning.meaning_id).then(function _callee6(data) {\n                                                return _regeneratorRuntime.async(function _callee6$(_context7) {\n                                                  while (1) {\n                                                    switch (_context7.prev = _context7.next) {\n                                                      case 0:\n                                                        entities.Words[word_index].Meanings[meaning_index].Synonyms = data;\n\n                                                      case 1:\n                                                      case \"end\":\n                                                        return _context7.stop();\n                                                    }\n                                                  }\n                                                }, null, null, null, Promise);\n                                              }).catch(function (error) {\n                                                return reject(error);\n                                              }));\n\n                                            case 2:\n                                            case \"end\":\n                                              return _context8.stop();\n                                          }\n                                        }\n                                      }, null, null, null, Promise);\n                                    }));\n\n                                  case 3:\n                                  case \"end\":\n                                    return _context9.stop();\n                                }\n                              }\n                            }, null, null, null, Promise);\n                          }).catch(function (error) {\n                            return reject(error);\n                          }));\n\n                        case 4:\n                        case \"end\":\n                          return _context10.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                }));\n\n              case 2:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    };\n\n    _this.toggleModalVisibility = function () {\n      console.log('toggling');\n\n      _this.setState(function (prevState) {\n        return {\n          isModalVisible: !prevState.isModalVisible\n        };\n      });\n    };\n\n    _this.test = function () {\n      console.log(_this.state);\n\n      _this._menu.show();\n    };\n\n    _this.state = {\n      title: 'Home',\n      isModalVisible: false\n    };\n    ignoreWarnings('error', ['Warning', 'Error']);\n    console.disableYellowBox = true;\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.refreshData();\n      DeviceEventEmitter.addListener(\"database_changed\", function () {\n        return _this2.refreshData();\n      });\n      DeviceEventEmitter.addListener(\"filter_by_wordseries\", function (tag) {});\n      DeviceEventEmitter.addListener(\"change_title\", function (tag) {\n        _this2.state.title = tag.tag_title;\n\n        _this2.loadData(\"tag\", [tag.tag_id]).then(function (data) {\n          return _this2.setState(data);\n        });\n      });\n    }\n  }, {\n    key: \"header\",\n    value: function header() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: [styles.header, styles.boxWithShadow],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          marginLeft: 20\n        },\n        onPress: function onPress() {\n          return _this3.props.navigation.openDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"menu\",\n        color: colors.default.primaryColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      })), React.createElement(Text, {\n        style: [headerStyles.headerTitle, {\n          maxWidth: 200\n        }],\n        numberOfLines: 1,\n        onPress: function onPress() {\n          return _this3.refreshData();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, this.state.title), React.createElement(TouchableOpacity, {\n        onPress: this.test,\n        style: {\n          marginRight: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"grid\",\n        type: \"entypo\",\n        color: colors.default.primaryColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }), React.createElement(Menu, {\n        ref: function ref(_ref) {\n          return _this3._menu = _ref;\n        },\n        style: {\n          backgroundColor: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, React.createElement(MenuItem, {\n        onPress: this.hideMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 59\n        }\n      }, \"Alphabet\")), React.createElement(MenuItem, {\n        onPress: this.hideMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 59\n        }\n      }, \"Latest\")), React.createElement(MenuItem, {\n        onPress: this.hideMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 59\n        }\n      }, \"Earliest\")), React.createElement(MenuDivider, {\n        color: colors.default.lightgray,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }), React.createElement(MenuItem, {\n        onPress: this.hideMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 59\n        }\n      }, \"Custom\")))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log(\"render\");\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: colors.default.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, this.state.Words == undefined ? React.createElement(LoadingPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }) : this.state.Words.length <= 0 ? React.createElement(FlatListWithCollapsibleHeader, {\n        header: this.header(),\n        navHeight: 44,\n        containerPaddingTop: 10,\n        data: [\"Add Word Card\"],\n        renderItem: function renderItem() {\n          return React.createElement(AddWordCard, {\n            onPress: function onPress() {\n              return _this4.props.navigation.navigate(\"AddWord\");\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 47\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }\n      }) : React.createElement(FlatListWithCollapsibleHeader, {\n        header: this.header(),\n        navHeight: 44,\n        containerPaddingTop: 0,\n        data: this.state.Words,\n        keyExtractor: function keyExtractor(item) {\n          return item.word_id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(WordCard, {\n            word: item,\n            onCardPress: _this4.props.onCardPress,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 53\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }\n      }), React.createElement(AddActionButton, {\n        onPress: function onPress() {\n          return _this4.props.navigation.navigate(\"AddWord\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nexport { HomeScreen as default };\n\nfunction LoadingPage() {\n  return React.createElement(View, {\n    style: [styles.container, styles.center],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, \"Loading icon here\"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  center: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    height: 44,\n    borderRadius: 0,\n    marginHorizontal: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: colors.default.white\n  },\n  card: {\n    margin: 10,\n    padding: 10,\n    borderRadius: 10,\n    backgroundColor: colors.default.white,\n    height: SCREEN_HEIGHT * 0.725\n  },\n  boxWithShadow: {\n    marginBottom: 5,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3\n  }\n});","map":{"version":3,"sources":["C:/Users/rickkoh/Desktop/git/wordbin-dev/src/screens/Home.js"],"names":["React","Icon","ignoreWarnings","headerStyles","colors","SCREEN_HEIGHT","Menu","MenuItem","MenuDivider","WordCard","AddWordCard","AddActionButton","database","FlatListWithCollapsibleHeader","HomeScreen","props","refreshData","console","log","state","title","loadData","then","data","setState","opts","args","entities","asyncForEach","array","callback","index","length","Promise","resolve","reject","getWordsByTags","Words","clip","catch","error","getWords","word","word_index","getWordTags","word_id","Tags","getMeanings","Meanings","meaning","meaning_index","getWordSynonym","meaning_id","Synonyms","toggleModalVisibility","prevState","isModalVisible","test","_menu","show","disableYellowBox","DeviceEventEmitter","addListener","tag","tag_title","tag_id","styles","header","boxWithShadow","marginLeft","navigation","openDrawer","default","primaryColor","headerTitle","maxWidth","marginRight","ref","backgroundColor","hideMenu","color","lightgray","flex","undefined","navigate","item","onCardPress","Component","LoadingPage","container","center","StyleSheet","create","alignItems","justifyContent","height","borderRadius","marginHorizontal","flexDirection","white","card","margin","padding","marginBottom","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, View, TouchableOpacity, DeviceEventEmitter, StyleSheet } from 'react-native';\r\nimport { Icon } from 'react-native-elements';\r\n\r\n// Ignore error warnings\r\nimport ignoreWarnings from 'react-native-ignore-warnings';\r\n\r\nimport { headerStyles, colors, SCREEN_HEIGHT } from '../Styles';\r\n\r\nimport Menu, { MenuItem, MenuDivider } from 'react-native-material-menu';\r\n\r\n// import AddWordModal from './AddWordModal';\r\n\r\nimport WordCard from '../components/WordCard';\r\nimport AddWordCard from '../components/AddWordCard';\r\nimport AddActionButton from '../components/Buttons/AddActionButton';\r\nimport database from '../services/Database';\r\n\r\nimport FlatListWithCollapsibleHeader from '../components/FlatListWithCollapsibleHeader';\r\n\r\n// NEEDS REVAMP\r\n\r\nexport default class HomeScreen extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: 'Home',\r\n            isModalVisible: false,\r\n        }\r\n\r\n        ignoreWarnings('error', ['Warning', 'Error']);\r\n        console.disableYellowBox = true;\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.refreshData();\r\n        DeviceEventEmitter.addListener(\"database_changed\", () => this.refreshData());\r\n        DeviceEventEmitter.addListener(\"filter_by_wordseries\", (tag) => {\r\n\r\n        })\r\n        DeviceEventEmitter.addListener(\"change_title\", (tag) => {\r\n            this.state.title = tag.tag_title;\r\n            this.loadData(\"tag\", [tag.tag_id]).then(data => this.setState(data));\r\n        });\r\n    }\r\n\r\n    refreshData = () => {\r\n        console.log(\"refresh data called\");\r\n        this.state.title = \"Home\";\r\n        this.loadData().then((data) => this.setState(data));\r\n    }\r\n\r\n    // opts: tags, series, default etc\r\n    // args: arguments\r\n    loadData = (opts, args) => {\r\n\r\n        entities = {}\r\n\r\n        async function asyncForEach(array, callback) {\r\n            for (let index = 0; index < array.length; index++) {\r\n                await callback(array[index], index, array);\r\n            }\r\n        }\r\n\r\n        if (opts == \"tag\") {\r\n            // \"tag\", [tag_id]\r\n            return new Promise(async (resolve, reject) => {\r\n                await database.getWordsByTags(args[0]).then(async data => {\r\n                    entities.Words = data;\r\n                    await clip(data);\r\n                })\r\n                .then(() => resolve(entities))\r\n                .catch(error => reject(error))\r\n            })\r\n        } else {\r\n            // default\r\n            return new Promise(async (resolve, reject) => {\r\n                await database.getWords().then(async data => {\r\n                    entities.Words = data;\r\n                    await clip(data);\r\n                })\r\n                .then(() => resolve(entities))\r\n                .catch(error => reject(error))\r\n            })\r\n        }\r\n\r\n        // Clip word data\r\n        async function clip(data) {\r\n            await asyncForEach(data, async (word, word_index) => {\r\n                await database.getWordTags(word.word_id).then(async data => {\r\n                    entities.Words[word_index].Tags = data;\r\n                })\r\n                .catch(error => reject(error))\r\n                await database.getMeanings(word.word_id).then(async data => {\r\n                    entities.Words[word_index].Meanings = data;\r\n                    await asyncForEach(data, async (meaning, meaning_index) => {\r\n                        await database.getWordSynonym(meaning.meaning_id).then(async data => {\r\n                            entities.Words[word_index].Meanings[meaning_index].Synonyms = data;\r\n                        })\r\n                        .catch(error => reject(error))\r\n                    })\r\n                })\r\n                .catch(error => reject(error))\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    toggleModalVisibility = () => {\r\n        console.log('toggling');\r\n        this.setState(prevState => ({isModalVisible: !prevState.isModalVisible}))\r\n    }\r\n\r\n    test = () => {\r\n        console.log(this.state);\r\n        this._menu.show();\r\n        // this.toggleModalVisibility();\r\n    }\r\n\r\n    header() {\r\n        return(\r\n            <View style={[styles.header, styles.boxWithShadow]}>\r\n                {\r\n                    // Header\r\n                }\r\n                <TouchableOpacity\r\n                    style={{marginLeft: 20}}\r\n                    onPress={() => this.props.navigation.openDrawer()}\r\n                >\r\n                    <Icon name='menu' color={colors.default.primaryColor}/>\r\n                </TouchableOpacity>\r\n                <Text style={[headerStyles.headerTitle, {maxWidth: 200}]} numberOfLines={1} onPress={() => this.refreshData()}>\r\n                    {this.state.title}\r\n                </Text>\r\n                <TouchableOpacity\r\n                    onPress={this.test}\r\n                    style={{marginRight: 20}}>\r\n                    <Icon name='grid' type=\"entypo\" color={colors.default.primaryColor}/>\r\n                    <Menu ref={(ref) => this._menu = ref}\r\n                        style={{backgroundColor: 'black'}}\r\n                    >\r\n                        <MenuItem onPress={this.hideMenu}><Text style={{color: 'white'}}>Alphabet</Text></MenuItem>\r\n                        <MenuItem onPress={this.hideMenu}><Text style={{color: 'white'}}>Latest</Text></MenuItem>\r\n                        <MenuItem onPress={this.hideMenu}><Text style={{color: 'white'}}>Earliest</Text></MenuItem>\r\n                        <MenuDivider color={colors.default.lightgray} />\r\n                        <MenuItem onPress={this.hideMenu}><Text style={{color: 'white'}}>Custom</Text></MenuItem>\r\n                    </Menu>\r\n                </TouchableOpacity>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    // Render\r\n    render() {\r\n        console.log(\"render\");\r\n        return(\r\n            <View style={{flex: 1, backgroundColor: colors.default.backgroundColor}}>\r\n                {\r\n                    this.state.Words == undefined ? (\r\n                        // Render for the condition: loading\r\n                        <LoadingPage/>\r\n                    ) :\r\n                    this.state.Words.length <= 0 ? (\r\n                        // Render for the condition: no words\r\n                        <FlatListWithCollapsibleHeader\r\n                            header={this.header()}\r\n                            navHeight={44}\r\n                            containerPaddingTop={10}\r\n                            data={[\"Add Word Card\"]}\r\n                            renderItem={() => <AddWordCard onPress={() => this.props.navigation.navigate(\"AddWord\")}/>}\r\n                        >\r\n                        </FlatListWithCollapsibleHeader>\r\n                    ) : (\r\n                        // Render for the condition: have words\r\n                        <FlatListWithCollapsibleHeader\r\n                            header={this.header()}\r\n                            navHeight={44}\r\n                            containerPaddingTop={0}\r\n                            data={this.state.Words}\r\n                            keyExtractor={item => item.word_id}\r\n                            renderItem={({item}) => <WordCard word={item} onCardPress={this.props.onCardPress}/>}\r\n                        />\r\n                )\r\n            }\r\n            <AddActionButton\r\n                onPress={() => this.props.navigation.navigate(\"AddWord\")}\r\n            />\r\n        </View>\r\n        )\r\n    }\r\n}\r\n\r\nfunction LoadingPage() {\r\n    // Just a loading icon at the middle\r\n    return(\r\n        <View style={[styles.container, styles.center]}>\r\n            <Text>Loading icon here</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n    center: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    header: {\r\n        height: 44, borderRadius: 0, marginHorizontal: 0, flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', backgroundColor: colors.default.white\r\n    },\r\n    card: {\r\n        margin: 10,\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        backgroundColor: colors.default.white,\r\n        height: SCREEN_HEIGHT * 0.725,\r\n    },\r\n    boxWithShadow: {\r\n        marginBottom: 5,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n        },\r\n        shadowOpacity: 0.22,\r\n        shadowRadius: 2.22,\r\n        elevation: 3,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}