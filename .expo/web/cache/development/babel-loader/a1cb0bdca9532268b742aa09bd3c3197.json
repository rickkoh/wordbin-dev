{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rickkoh\\\\Desktop\\\\git\\\\wordbin-dev\\\\src\\\\components\\\\Forms\\\\TagForm.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ClearButton from \"../Buttons/ClearButton\";\nimport { SCREEN_WIDTH } from \"../../Styles\";\n\nvar TagForm = function (_React$Component) {\n  _inherits(TagForm, _React$Component);\n\n  var _super = _createSuper(TagForm);\n\n  function TagForm(props) {\n    var _this;\n\n    _classCallCheck(this, TagForm);\n\n    _this = _super.call(this, props);\n\n    _this.updateData = function () {\n      _this.setState({\n        tag: _this.props.data\n      });\n    };\n\n    _this.addTag = function (tag_title) {\n      return new Promise(function (resolve, reject) {\n        if (tag_title) {\n          _this.setState({\n            tag: _this.state.tag.concat({\n              tag_title: tag_title\n            })\n          }, function () {\n            resolve();\n          });\n        } else {\n          reject();\n        }\n      });\n    };\n\n    _this.removeTag = function (index) {\n      tag = _this.state.tag;\n      tag.splice(index, 1);\n\n      _this.setState({\n        tag: tag\n      });\n    };\n\n    _this.scrollToIndex = function (index, animated) {\n      _this.flatList.scrollToIndex({\n        animated: animated,\n        index: index\n      });\n    };\n\n    _this.onTagTextInputChange = function (text) {\n      _this.props.onTagInputTextChange ? _this.props.onTagTextInputChange(text) : null;\n    };\n\n    _this.onKeyPress = function (e) {\n      if (e.nativeEvent.key == ' ') {\n        if (_this.state.value != undefined && _this.state.value.length >= 1) _this.addTag(_this.state.value);\n\n        _this.setState({\n          value: \"\"\n        });\n      }\n\n      _this.props.onKeyPress ? _this.props.onKeyPress(e) : null;\n    };\n\n    _this.onChange = function (e) {\n      if (e.nativeEvent.text.includes(\" \")) _this.setState({\n        value: \"\"\n      });else _this.setState({\n          value: e.nativeEvent.text\n        });\n      _this.props.onChange ? _this.props.onChange(e) : null;\n    };\n\n    _this.onBlur = function () {\n      _this.addTag(_this.state.value);\n\n      _this.setState({\n        value: \"\"\n      });\n\n      _this.props.onBlur ? _this.props.onBlur() : null;\n    };\n\n    _this.onFocus = function () {\n      _this.props.onFocus ? _this.props.onFocus() : null;\n    };\n\n    _this._renderTagList = function () {\n      return React.createElement(FlatList, {\n        data: _this.state.tag,\n        ref: function ref(_ref) {\n          return _this.flatList = _ref;\n        },\n        contentContainerStyle: styles.tagList,\n        renderItem: _this._renderTagItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        listKey: function listKey(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this._renderTagItem = function (_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(View, {\n        style: styles.tagItemContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.tagItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.tagText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, item.tag_title), React.createElement(ClearButton, {\n        color: \"lightgray\",\n        onPress: function onPress() {\n          return _this.removeTag(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      })), React.createElement(TextInput, {\n        style: {\n          margin: 2,\n          minWidth: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.state = {\n      value: \"\",\n      tag: _this.props.data\n    };\n    return _this;\n  }\n\n  _createClass(TagForm, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state != prevState) {\n        this.props.onTagDataChange ? this.props.onTagDataChange(this.state.tag) : null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          maxHeight: 160\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        value: this.state.value,\n        placeholder: \"Tags\",\n        onKeyPress: function onKeyPress(e) {\n          return _this2.onKeyPress(e);\n        },\n        onChange: function onChange(e) {\n          return _this2.onChange(e);\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.onTagTextInputChange(text);\n        },\n        onBlur: this.onBlur,\n        onFocus: this.onFocus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }), this._renderTagList());\n    }\n  }]);\n\n  return TagForm;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  textInput: {\n    height: 40,\n    fontSize: 16\n  },\n  tagList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    width: SCREEN_WIDTH\n  },\n  tagItemContainer: {\n    marginBottom: 10,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  tagItem: {\n    flexDirection: 'row',\n    borderRadius: 5,\n    backgroundColor: '#f4f7f8'\n  },\n  tagText: {\n    padding: 5,\n    paddingRight: 0\n  }\n});\nexport default TagForm;","map":{"version":3,"sources":["C:/Users/rickkoh/Desktop/git/wordbin-dev/src/components/Forms/TagForm.js"],"names":["React","ClearButton","SCREEN_WIDTH","TagForm","props","updateData","setState","tag","data","addTag","tag_title","Promise","resolve","reject","state","concat","removeTag","index","splice","scrollToIndex","animated","flatList","onTagTextInputChange","text","onTagInputTextChange","onKeyPress","e","nativeEvent","key","value","undefined","length","onChange","includes","onBlur","onFocus","_renderTagList","ref","styles","tagList","_renderTagItem","item","toString","tagItemContainer","tagItem","tagText","margin","minWidth","prevProps","prevState","onTagDataChange","maxHeight","textInput","Component","StyleSheet","create","height","fontSize","flexDirection","flexWrap","width","marginBottom","justifyContent","borderRadius","backgroundColor","padding","paddingRight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, TextInput, Text, FlatList } from 'react-native';\r\n\r\nimport ClearButton from '../Buttons/ClearButton';\r\n\r\nimport { SCREEN_WIDTH } from '../../Styles';\r\n\r\nclass TagForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: \"\",\r\n            tag: this.props.data,\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // onTagDataChanged = {(tag) => //handle tagData}\r\n        if (this.state != prevState) {\r\n            this.props.onTagDataChange ? this.props.onTagDataChange(this.state.tag) : null;\r\n        }\r\n    }\r\n\r\n    // Update data function\r\n    updateData = () => {\r\n        this.setState({tag: this.props.data});\r\n    }\r\n\r\n    // Add tag\r\n    addTag = (tag_title) => {\r\n        return new Promise((resolve, reject) => {\r\n            if (tag_title) {\r\n                this.setState({\r\n                    tag: this.state.tag.concat({tag_title: tag_title})\r\n                }, () => {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                reject();\r\n            }\r\n        })\r\n    }\r\n\r\n    // Remove tag\r\n    removeTag = (index) => {\r\n        tag = this.state.tag;\r\n        tag.splice(index, 1);\r\n        this.setState({tag: tag});\r\n    }\r\n\r\n    // Scroll to index function\r\n    scrollToIndex = (index, animated) => {\r\n        this.flatList.scrollToIndex({animated: animated, index: index});\r\n    }\r\n\r\n    // Handle tag input text change\r\n    onTagTextInputChange = (text) => {\r\n        // if (text.length > 1 && text.includes(\" \")) {\r\n            // this.setState({value: \"\"});\r\n            // this.addTag(text.split(\" \").join(\"\"));\r\n        // } else {\r\n            // // if (!text.includes(\" \")) this.setState({value: text});\r\n        // }\r\n\r\n        this.props.onTagInputTextChange ? this.props.onTagTextInputChange(text) : null;\r\n    }\r\n\r\n    // Handle onKeyPress event\r\n    onKeyPress = (e) => {\r\n        // Add tag if \" \" is detected\r\n        if (e.nativeEvent.key == ' ') {\r\n            // Ensure that value has at least a character\r\n            if (this.state.value != undefined && this.state.value.length >= 1) this.addTag(this.state.value);\r\n            this.setState({value: \"\"})\r\n        }\r\n\r\n        this.props.onKeyPress ? this.props.onKeyPress(e) : null;\r\n    }\r\n\r\n    // Handle onChange event\r\n    onChange = (e) => {\r\n        // Set value to \"\" if a space \" \" is detected\r\n        if (e.nativeEvent.text.includes(\" \")) this.setState({value: \"\"});\r\n        // Else set value to user input\r\n        else this.setState({value: e.nativeEvent.text});\r\n\r\n        this.props.onChange ? this.props.onChange(e) : null;\r\n    }\r\n\r\n    // onBlur function\r\n    onBlur = () => {\r\n        // Add tag when blur\r\n        this.addTag(this.state.value);\r\n        this.setState({value: \"\"});\r\n\r\n        this.props.onBlur ? this.props.onBlur() : null;\r\n    }\r\n\r\n    // onFocus function\r\n    onFocus = () => {\r\n        this.props.onFocus ? this.props.onFocus() : null;\r\n    }\r\n\r\n    // Render function\r\n    render() {\r\n        return(\r\n            <View style={{ maxHeight: 160 }}>\r\n                <TextInput\r\n                    style={styles.textInput}\r\n                    value={this.state.value}\r\n                    placeholder=\"Tags\"\r\n                    onKeyPress={(e) => this.onKeyPress(e)}\r\n                    onChange={(e) => this.onChange(e)}\r\n                    onChangeText={(text) => this.onTagTextInputChange(text)}\r\n                    onBlur={this.onBlur}\r\n                    onFocus={this.onFocus}\r\n                />\r\n                {this._renderTagList()}\r\n            </View>\r\n        )\r\n    }\r\n\r\n    _renderTagList = () => {\r\n        return(\r\n            <FlatList\r\n                data={this.state.tag}\r\n                ref={ref => this.flatList = ref}\r\n                contentContainerStyle={styles.tagList}\r\n                renderItem={this._renderTagItem}\r\n                keyExtractor={(item, index) => index.toString()}\r\n                listKey={(item, index) => index.toString()}\r\n            />\r\n        )\r\n    }\r\n\r\n    _renderTagItem = ({item, index}) => {\r\n        return(\r\n            <View style={styles.tagItemContainer}>\r\n                <View style={styles.tagItem}>\r\n                    <Text style={styles.tagText}>{item.tag_title}</Text>\r\n                    <ClearButton\r\n                        color='lightgray'\r\n                        onPress={() => this.removeTag(index)}\r\n                    />\r\n                </View>\r\n                <TextInput style={{margin: 2, minWidth: 5}}/>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    textInput: {\r\n        height: 40,\r\n        // paddingHorizontal: 20,\r\n        fontSize: 16,\r\n    },\r\n    tagList: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        width: SCREEN_WIDTH,\r\n    },\r\n    tagItemContainer: {\r\n        marginBottom: 10,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n    },\r\n    tagItem: {\r\n        flexDirection: 'row',\r\n        borderRadius: 5,\r\n        backgroundColor: '#f4f7f8',\r\n    },\r\n    tagText: {\r\n        padding: 5,\r\n        paddingRight: 0,\r\n    }\r\n})\r\n\r\nexport default TagForm;"]},"metadata":{},"sourceType":"module"}