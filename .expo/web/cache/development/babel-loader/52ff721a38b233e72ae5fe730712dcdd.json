{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rickkoh\\\\Desktop\\\\git\\\\wordbin-dev\\\\src\\\\components\\\\WordBrowser.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon } from 'react-native-elements';\nimport Modal from 'react-native-modal';\nimport { WebView } from 'react-native-webview';\nimport { STATUS_BAR_HEIGHT, colors } from \"../Styles\";\n\nvar WordBrowser = function (_React$Component) {\n  _inherits(WordBrowser, _React$Component);\n\n  var _super = _createSuper(WordBrowser);\n\n  function WordBrowser(props) {\n    var _this;\n\n    _classCallCheck(this, WordBrowser);\n\n    _this = _super.call(this, props);\n\n    _this.onCloseButtonPress = function () {\n      try {\n        _this.props.onCloseButtonPress();\n      } catch (_unused) {}\n    };\n\n    _this.state = {\n      isVisible: true\n    };\n    return _this;\n  }\n\n  _createClass(WordBrowser, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        isVisible: this.props.isVisible,\n        style: styles.modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.headerButton,\n        onPress: this.onCloseButtonPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, React.createElement(Icon, {\n        name: \"close\",\n        type: \"evilicon\",\n        size: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.headerButton,\n        onPress: this.onCloseButtonPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, React.createElement(Icon, {\n        name: \"ellipsis1\",\n        type: \"antdesign\",\n        size: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }))), React.createElement(WebView, {\n        source: {\n          uri: \"https://www.google.com/search?q=define \" + this.props.word.toLowerCase()\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return WordBrowser;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  modal: {\n    margin: 0\n  },\n  container: {\n    flex: 1\n  },\n  header: {\n    paddingTop: STATUS_BAR_HEIGHT,\n    height: STATUS_BAR_HEIGHT + 40,\n    backgroundColor: colors.default.white,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  headerButton: {\n    paddingHorizontal: 15\n  }\n});\nexport default WordBrowser;","map":{"version":3,"sources":["C:/Users/rickkoh/Desktop/git/wordbin-dev/src/components/WordBrowser.js"],"names":["React","Icon","Modal","WebView","STATUS_BAR_HEIGHT","colors","WordBrowser","props","onCloseButtonPress","state","isVisible","styles","modal","container","header","headerButton","uri","word","toLowerCase","Component","StyleSheet","create","margin","flex","paddingTop","height","backgroundColor","default","white","flexDirection","justifyContent","alignItems","paddingHorizontal"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,SAASC,iBAAT,EAA4BC,MAA5B;;IAEMC,W;;;;;AAEF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAQnBC,kBARmB,GAQE,YAAM;AACvB,UAAI;AACA,cAAKD,KAAL,CAAWC,kBAAX;AACH,OAFD,CAEE,gBAAM,CAAG;AACd,KAZkB;;AAGf,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAHe;AAMlB;;;;6BAQQ;AACL,aACI,oBAAC,KAAD;AACI,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAD1B;AAEI,QAAA,KAAK,EAAEC,MAAM,CAACC,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEH,MAAM,CAACI,YAAhC;AAA8C,QAAA,OAAO,EAAE,KAAKP,kBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,IAAI,EAAC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEG,MAAM,CAACI,YAAhC;AAA8C,QAAA,OAAO,EAAE,KAAKP,kBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,WAAX;AAAuB,QAAA,IAAI,EAAC,WAA5B;AAAwC,QAAA,IAAI,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CADJ,EASI,oBAAC,OAAD;AACI,QAAA,MAAM,EAAE;AAACQ,UAAAA,GAAG,EAAE,4CAA0C,KAAKT,KAAL,CAAWU,IAAX,CAAgBC,WAAhB;AAAhD,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CAJJ,CADJ;AAoBH;;;;EArCqBlB,KAAK,CAACmB,S;;AAwChC,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,KAAK,EAAE;AACHU,IAAAA,MAAM,EAAE;AADL,GADsB;AAI7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,IAAI,EAAE;AADC,GAJkB;AAO7BT,EAAAA,MAAM,EAAE;AACJU,IAAAA,UAAU,EAAEpB,iBADR;AAEJqB,IAAAA,MAAM,EAAErB,iBAAiB,GAAC,EAFtB;AAGJsB,IAAAA,eAAe,EAAErB,MAAM,CAACsB,OAAP,CAAeC,KAH5B;AAIJC,IAAAA,aAAa,EAAE,KAJX;AAKJC,IAAAA,cAAc,EAAE,eALZ;AAMJC,IAAAA,UAAU,EAAE;AANR,GAPqB;AAe7BhB,EAAAA,YAAY,EAAE;AACViB,IAAAA,iBAAiB,EAAE;AADT;AAfe,CAAlB,CAAf;AAoBA,eAAe1B,WAAf","sourcesContent":["import React from 'react'\r\nimport { View, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Icon } from 'react-native-elements';\r\nimport Modal from 'react-native-modal';\r\nimport { WebView } from 'react-native-webview';\r\n\r\nimport { STATUS_BAR_HEIGHT, colors } from '../Styles';\r\n\r\nclass WordBrowser extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isVisible: true\r\n        }\r\n    }\r\n\r\n    onCloseButtonPress = () => {\r\n        try {\r\n            this.props.onCloseButtonPress();\r\n        } catch { }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal\r\n                isVisible={this.props.isVisible}\r\n                style={styles.modal}\r\n            >\r\n                <View style={styles.container}>\r\n                    <View style={styles.header}>\r\n                        <TouchableOpacity style={styles.headerButton} onPress={this.onCloseButtonPress}>\r\n                            <Icon name='close' type='evilicon' size='30'/>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style={styles.headerButton} onPress={this.onCloseButtonPress}>\r\n                            <Icon name='ellipsis1' type='antdesign' size='30'/>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    <WebView\r\n                        source={{uri: \"https://www.google.com/search?q=define \"+this.props.word.toLowerCase()}}\r\n                    />\r\n                </View>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    modal: {\r\n        margin: 0\r\n    },\r\n    container: {\r\n        flex: 1\r\n    },\r\n    header: {\r\n        paddingTop: STATUS_BAR_HEIGHT,\r\n        height: STATUS_BAR_HEIGHT+40,\r\n        backgroundColor: colors.default.white,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    headerButton: {\r\n        paddingHorizontal: 15\r\n    }\r\n})\r\n\r\nexport default WordBrowser;"]},"metadata":{},"sourceType":"module"}