{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rickkoh\\\\Desktop\\\\git\\\\wordbin-dev\\\\src\\\\components\\\\Forms\\\\MeaningFormModal.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from 'react-native-modal';\nimport Header from \"../../components/Header\";\nimport { headerStyles, colors } from \"../../Styles\";\nimport TextButton from \"../Buttons/TextButton\";\nimport PillButton from \"../Buttons/PillButton\";\n\nvar MeaningFormModal = function (_React$Component) {\n  _inherits(MeaningFormModal, _React$Component);\n\n  var _super = _createSuper(MeaningFormModal);\n\n  function MeaningFormModal() {\n    _classCallCheck(this, MeaningFormModal);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MeaningFormModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Modal, {\n        isVisible: this.props.isVisible,\n        swipeDirection: ['down'],\n        swipeThreshold: 300,\n        onSwipeComplete: this.props.toggleVisibility,\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: \"padding\",\n        enabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, React.createElement(Header, {\n        headerRight: React.createElement(TextButton, {\n          text: \"Done\",\n          style: headerStyles.headerButtonRight,\n          onPress: this.props.toggleVisibility,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 24,\n          marginLeft: 20,\n          color: this.props.meaning.meaning_text == undefined ? colors.default.gray : colors.default.black\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }\n      }, this.props.meaning.meaning_text == undefined ? \"Meaning of word\" : this.props.meaning.meaning_text), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      })), React.createElement(TextInput, {\n        multiline: true,\n        ref: function ref(_ref) {\n          return _this.wordInput = _ref;\n        },\n        style: styles.textBox,\n        placeholder: \"Sentence Example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }), React.createElement(KeyboardBar, {\n        renderContent: this.props.keyboardBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return MeaningFormModal;\n}(React.Component);\n\nKeyboardBar = function KeyboardBar(props) {\n  return React.createElement(View, {\n    style: {\n      borderTopWidth: 1,\n      borderColor: '#f4f7f8',\n      height: 50,\n      alignItems: 'center',\n      paddingHorizontal: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, props.renderContent);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  modal: {\n    flex: 1,\n    backgroundColor: colors.default.backgroundColor\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingTop: 20,\n    paddingHorizontal: 20\n  },\n  textBox: {\n    flex: 1,\n    marginTop: 20,\n    marginHorizontal: 20,\n    textAlignVertical: 'top',\n    fontSize: 16\n  },\n  textInput: {\n    flex: 1,\n    marginTop: 20,\n    marginHorizontal: 20,\n    fontSize: 16\n  },\n  lastTextInput: {\n    margin: 20,\n    fontSize: 16\n  }\n});\nexport default MeaningFormModal;","map":{"version":3,"sources":["C:/Users/rickkoh/Desktop/git/wordbin-dev/src/components/Forms/MeaningFormModal.js"],"names":["React","Modal","Header","headerStyles","colors","TextButton","PillButton","MeaningFormModal","props","isVisible","toggleVisibility","margin","styles","container","modal","headerButtonRight","fontSize","marginLeft","color","meaning","meaning_text","undefined","default","gray","black","flexDirection","height","flex","backgroundColor","ref","wordInput","textBox","keyboardBar","Component","KeyboardBar","borderTopWidth","borderColor","alignItems","paddingHorizontal","renderContent","StyleSheet","create","header","justifyContent","paddingTop","marginTop","marginHorizontal","textAlignVertical","textInput","lastTextInput"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, KeyboardAvoidingView, TextInput, Text } from 'react-native';\r\n\r\nimport Modal from 'react-native-modal';\r\n\r\nimport Header from '../../components/Header';\r\nimport { headerStyles, colors } from '../../Styles';\r\nimport TextButton from '../Buttons/TextButton';\r\nimport PillButton from '../Buttons/PillButton';\r\n\r\nclass MeaningFormModal extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <Modal\r\n                isVisible={this.props.isVisible}\r\n                swipeDirection={['down']}\r\n                swipeThreshold={300}\r\n                onSwipeComplete={this.props.toggleVisibility}\r\n                // onShow={() => this.wordInput.focus()}\r\n                style={{margin: 0}}\r\n            >\r\n                <KeyboardAvoidingView style={styles.container} behavior=\"padding\" enabled>\r\n                    <View style={styles.modal}>\r\n                        <Header\r\n                            headerRight={\r\n                                <TextButton text=\"Done\" style={headerStyles.headerButtonRight} onPress={this.props.toggleVisibility}/>\r\n                            }\r\n                        />\r\n                        <Text style={{fontSize: 24, marginLeft: 20, color: this.props.meaning.meaning_text == undefined ? colors.default.gray : colors.default.black}}>{this.props.meaning.meaning_text == undefined ? \"Meaning of word\" : this.props.meaning.meaning_text}</Text>\r\n                        <View style={{flexDirection: 'row', height: 30}}>\r\n                            <View style={{flex: 1, backgroundColor: 'red'}}>\r\n\r\n                            </View>\r\n                            <View style={{flex: 1, backgroundColor: 'green'}}>\r\n\r\n                            </View>\r\n                            <View style={{flex: 1, backgroundColor: 'blue'}}>\r\n\r\n                            </View>\r\n                        </View>\r\n                        <TextInput\r\n                            multiline\r\n                            ref={ref => this.wordInput = ref}\r\n                            style={styles.textBox}\r\n                            placeholder=\"Sentence Example\"\r\n                        />\r\n                        {\r\n                        // <TextInput\r\n                            // style={styles.textInput}\r\n                            // placeholder=\"Synonyms\"\r\n                        // />\r\n                        // <TextInput\r\n                            // style={styles.textInput}\r\n                            // placeholder=\"Antonyms\"\r\n                        // />\r\n                        // <TextInput\r\n                            // style={styles.lastTextInput}\r\n                            // placeholder=\"Origin\"\r\n                        // />\r\n                        }\r\n                        <KeyboardBar renderContent={this.props.keyboardBar}/>\r\n                    </View>\r\n                </KeyboardAvoidingView>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nKeyboardBar = (props) => {\r\n        return(\r\n            <View style={{borderTopWidth: 1, borderColor: '#f4f7f8', height: 50, alignItems: 'center', paddingHorizontal: 20}}>\r\n                {props.renderContent}\r\n            </View>\r\n        )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n    modal: {\r\n        flex: 1,\r\n        // marginTop: 37.5,\r\n        // borderTopLeftRadius: 30,\r\n        // borderTopRightRadius: 30,\r\n        backgroundColor: colors.default.backgroundColor\r\n    },\r\n    header: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        paddingTop: 20,\r\n        paddingHorizontal: 20,\r\n    },\r\n    textBox: {\r\n        flex: 1,\r\n        marginTop: 20,\r\n        marginHorizontal: 20,\r\n        textAlignVertical: 'top',\r\n        fontSize: 16\r\n    },\r\n    textInput: {\r\n        flex: 1,\r\n        marginTop: 20,\r\n        marginHorizontal: 20,\r\n        fontSize: 16\r\n    },\r\n    lastTextInput: {\r\n        margin: 20,\r\n        fontSize: 16\r\n    }\r\n})\r\n\r\nexport default MeaningFormModal;"]},"metadata":{},"sourceType":"module"}