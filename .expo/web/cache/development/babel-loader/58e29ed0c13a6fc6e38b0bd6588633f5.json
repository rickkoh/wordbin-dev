{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rickkoh\\\\Desktop\\\\git\\\\wordbin-dev\\\\src\\\\components\\\\Buttons\\\\ClearButton.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon } from 'react-native-elements';\nimport { colors } from \"../../Styles\";\n\nvar ClearButton = function (_React$Component) {\n  _inherits(ClearButton, _React$Component);\n\n  var _super = _createSuper(ClearButton);\n\n  function ClearButton() {\n    _classCallCheck(this, ClearButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ClearButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, {\n        onPress: this.props.onPress,\n        style: [styles.clearButton, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        name: \"cancel\",\n        size: 16,\n        color: this.props.color == undefined ? colors.default.primaryColor : this.props.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ClearButton;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  clearButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 5\n  }\n});\nexport default ClearButton;","map":{"version":3,"sources":["C:/Users/rickkoh/Desktop/git/wordbin-dev/src/components/Buttons/ClearButton.js"],"names":["React","Icon","colors","ClearButton","props","onPress","styles","clearButton","style","color","undefined","default","primaryColor","Component","StyleSheet","create","justifyContent","alignItems","margin"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,MAAT;;IAEMC,W;;;;;;;;;;;;;6BAEO;AACL,aACI,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OADxB;AAEI,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,WAAR,EAAqB,KAAKH,KAAL,CAAWI,KAAhC,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,IAAI,EAAE,EAA1B;AAA8B,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,KAAX,IAAoBC,SAApB,GAAgCR,MAAM,CAACS,OAAP,CAAeC,YAA/C,GAA8D,KAAKR,KAAL,CAAWK,KAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAOH;;;;EAVqBT,KAAK,CAACa,S;;AAahC,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,WAAW,EAAC;AACRS,IAAAA,cAAc,EAAE,QADR;AAERC,IAAAA,UAAU,EAAE,QAFJ;AAGRC,IAAAA,MAAM,EAAE;AAHA;AADiB,CAAlB,CAAf;AAQA,eAAef,WAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Icon } from 'react-native-elements';\r\nimport { colors } from '../../Styles';\r\n\r\nclass ClearButton extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <TouchableOpacity\r\n                onPress={this.props.onPress}\r\n                style={[styles.clearButton, this.props.style]}>\r\n                <Icon name='cancel' size={16} color={this.props.color == undefined ? colors.default.primaryColor : this.props.color}/>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    clearButton:{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: 5,\r\n    }\r\n});\r\n\r\nexport default ClearButton;\r\n"]},"metadata":{},"sourceType":"module"}