{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rickkoh\\\\Desktop\\\\git\\\\wordbin-dev\\\\src\\\\components\\\\Header.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon } from 'react-native-elements';\nimport { headerStyles } from \"../Styles\";\nimport { withNavigation } from 'react-navigation';\nimport { colors } from \"../Styles\";\n\nvar Header = function (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  var _super = _createSuper(Header);\n\n  function Header() {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderHeader = function () {\n      if (_this.props.header == null) {\n        return React.createElement(View, {\n          style: headerStyles.header,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 17\n          }\n        }, _this.renderHeaderLeft(), _this.renderHeaderTitle(), _this.renderHeaderRight());\n      } else {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }\n        }, _this.props.header);\n      }\n    };\n\n    _this.renderHeaderLeft = function () {\n      if (_this.props.headerLeft == null) {\n        return null;\n      } else {\n        return React.createElement(View, {\n          style: headerStyles.headerLeft,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }\n        }, _this.props.headerLeft);\n      }\n    };\n\n    _this.renderHeaderTitle = function () {\n      if (_this.props.headerTitle == null) {\n        return null;\n      } else {\n        return React.createElement(View, {\n          style: headerStyles.headerCenter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }\n        }, _this.props.headerTitle);\n      }\n    };\n\n    _this.renderHeaderRight = function () {\n      if (_this.props.headerRight == null) {\n        return null;\n      } else {\n        return React.createElement(View, {\n          style: headerStyles.headerRight,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }\n        }, _this.props.headerRight);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          backgroundColor: this.props.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, this.renderHeader());\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport default withNavigation(Header);","map":{"version":3,"sources":["C:/Users/rickkoh/Desktop/git/wordbin-dev/src/components/Header.js"],"names":["React","Icon","headerStyles","withNavigation","colors","Header","renderHeader","props","header","renderHeaderLeft","renderHeaderTitle","renderHeaderRight","headerLeft","headerTitle","headerCenter","headerRight","backgroundColor","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,YAAT;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,SAASC,MAAT;;IAEMC,M;;;;;;;;;;;;;;;;UAEFC,Y,GAAe,YAAM;AACjB,UAAI,MAAKC,KAAL,CAAWC,MAAX,IAAqB,IAAzB,EAA+B;AAC3B,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEN,YAAY,CAACM,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MAAKC,gBAAL,EADL,EAEK,MAAKC,iBAAL,EAFL,EAGK,MAAKC,iBAAL,EAHL,CADJ;AAOH,OARD,MAQO;AACH,eACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MAAKJ,KAAL,CAAWC,MADhB,CADJ;AAKH;AACJ,K;;UAEDC,gB,GAAmB,YAAM;AACrB,UAAI,MAAKF,KAAL,CAAWK,UAAX,IAAyB,IAA7B,EAAmC;AAC/B,eACI,IADJ;AAGH,OAJD,MAIO;AACH,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEV,YAAY,CAACU,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MAAKL,KAAL,CAAWK,UADhB,CADJ;AAKH;AACJ,K;;UAEDF,iB,GAAoB,YAAM;AACtB,UAAI,MAAKH,KAAL,CAAWM,WAAX,IAA0B,IAA9B,EAAoC;AAChC,eACI,IADJ;AAGH,OAJD,MAIO;AACH,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,YAAY,CAACY,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MAAKP,KAAL,CAAWM,WADhB,CADJ;AAKH;AACJ,K;;UAEDF,iB,GAAoB,YAAM;AACtB,UAAI,MAAKJ,KAAL,CAAWQ,WAAX,IAA0B,IAA9B,EAAoC;AAChC,eACI,IADJ;AAGH,OAJD,MAIO;AACH,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEb,YAAY,CAACa,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MAAKR,KAAL,CAAWQ,WADhB,CADJ;AAKH;AACJ,K;;;;;;;6BAEQ;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAE,KAAKT,KAAL,CAAWS;AAA7B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKV,YAAL,EADL,CADJ;AAKH;;;;EApEgBN,KAAK,CAACiB,S;;AAuE3B,eAAed,cAAc,CAACE,MAAD,CAA7B","sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { Icon } from 'react-native-elements';\r\nimport { headerStyles } from '../Styles';\r\nimport { withNavigation } from 'react-navigation';\r\n\r\nimport { colors } from '../Styles';\r\n\r\nclass Header extends React.Component {\r\n\r\n    renderHeader = () => {\r\n        if (this.props.header == null) {\r\n            return(\r\n                <View style={headerStyles.header}>\r\n                    {this.renderHeaderLeft()}\r\n                    {this.renderHeaderTitle()}\r\n                    {this.renderHeaderRight()}\r\n                </View>\r\n            )\r\n        } else {\r\n            return(\r\n                <View>\r\n                    {this.props.header}\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderHeaderLeft = () => {\r\n        if (this.props.headerLeft == null) {\r\n            return(\r\n                null\r\n            )\r\n        } else {\r\n            return(\r\n                <View style={headerStyles.headerLeft}>\r\n                    {this.props.headerLeft}\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderHeaderTitle = () => {\r\n        if (this.props.headerTitle == null) {\r\n            return(\r\n                null\r\n            )\r\n        } else {\r\n            return(\r\n                <View style={headerStyles.headerCenter}>\r\n                    {this.props.headerTitle}\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderHeaderRight = () => {\r\n        if (this.props.headerRight == null) {\r\n            return(\r\n                null\r\n            )\r\n        } else {\r\n            return(\r\n                <View style={headerStyles.headerRight}>\r\n                    {this.props.headerRight}\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <View style={{backgroundColor: this.props.backgroundColor}}>\r\n                {this.renderHeader()}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withNavigation(Header);\r\n"]},"metadata":{},"sourceType":"module"}