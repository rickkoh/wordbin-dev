{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rickkoh\\\\Desktop\\\\git\\\\wordbin-dev\\\\src\\\\components\\\\Buttons\\\\PillButton.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { colors } from \"../../Styles\";\n\nvar PillButton = function (_React$Component) {\n  _inherits(PillButton, _React$Component);\n\n  var _super = _createSuper(PillButton);\n\n  function PillButton() {\n    _classCallCheck(this, PillButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PillButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: this.props.enabled || this.props.enabled == undefined ? styles.enabled : styles.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.props.enabled || this.props.enabled == undefined ? this.props.onPress : null,\n        style: [styles.defaultPillButtonStyle, this.props.style, this.props.backgroundColor == null ? null : {\n          backgroundColor: this.props.backgroundColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        style: [styles.defaultTextStyle, this.props.textColor == null ? null : {\n          color: this.props.textColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }\n      }, this.props.text)));\n    }\n  }]);\n\n  return PillButton;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  defaultPillButtonStyle: {\n    paddingHorizontal: 20,\n    paddingVertical: 5,\n    borderRadius: 25,\n    backgroundColor: colors.default.blue,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  defaultTextStyle: {\n    color: colors.default.white,\n    fontSize: 16\n  },\n  enabled: {\n    opacity: 1\n  },\n  disabled: {\n    opacity: 0.25\n  }\n});\nexport default PillButton;","map":{"version":3,"sources":["C:/Users/rickkoh/Desktop/git/wordbin-dev/src/components/Buttons/PillButton.js"],"names":["React","colors","PillButton","props","enabled","undefined","styles","disabled","onPress","defaultPillButtonStyle","style","backgroundColor","defaultTextStyle","textColor","color","text","Component","StyleSheet","create","paddingHorizontal","paddingVertical","borderRadius","default","blue","justifyContent","alignItems","white","fontSize","opacity"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,MAAT;;IAEMC,U;;;;;;;;;;;;;6BAEO;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAG,KAAKC,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWC,OAAX,IAAsBC,SAA7C,GAA0DC,MAAM,CAACF,OAAjE,GAA2EE,MAAM,CAACC,QAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAG,KAAKJ,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWC,OAAX,IAAsBC,SAA7C,GAA0D,KAAKF,KAAL,CAAWK,OAArE,GAA+E,IAD5F;AAEI,QAAA,KAAK,EAAE,CAACF,MAAM,CAACG,sBAAR,EAAgC,KAAKN,KAAL,CAAWO,KAA3C,EAAkD,KAAKP,KAAL,CAAWQ,eAAX,IAA8B,IAA9B,GAAqC,IAArC,GAA4C;AAACA,UAAAA,eAAe,EAAE,KAAKR,KAAL,CAAWQ;AAA7B,SAA9F,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,CAArB;AAAwB,QAAA,KAAK,EAAE,CAACL,MAAM,CAACM,gBAAR,EAA0B,KAAKT,KAAL,CAAWU,SAAX,IAAwB,IAAxB,GAA+B,IAA/B,GAAsC;AAACC,UAAAA,KAAK,EAAE,KAAKX,KAAL,CAAWU;AAAnB,SAAhE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgI,KAAKV,KAAL,CAAWY,IAA3I,CAHJ,CADJ,CADJ;AASH;;;;EAZoBf,KAAK,CAACgB,S;;AAgB/B,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,sBAAsB,EAAE;AACpBU,IAAAA,iBAAiB,EAAE,EADC;AAEpBC,IAAAA,eAAe,EAAE,CAFG;AAGpBC,IAAAA,YAAY,EAAE,EAHM;AAIpBV,IAAAA,eAAe,EAAEV,MAAM,CAACqB,OAAP,CAAeC,IAJZ;AAKpBC,IAAAA,cAAc,EAAE,QALI;AAMpBC,IAAAA,UAAU,EAAE;AANQ,GADK;AAS7Bb,EAAAA,gBAAgB,EAAE;AACdE,IAAAA,KAAK,EAAEb,MAAM,CAACqB,OAAP,CAAeI,KADR;AAEdC,IAAAA,QAAQ,EAAE;AAFI,GATW;AAa7BvB,EAAAA,OAAO,EAAE;AACLwB,IAAAA,OAAO,EAAE;AADJ,GAboB;AAgB7BrB,EAAAA,QAAQ,EAAE;AACNqB,IAAAA,OAAO,EAAE;AADH;AAhBmB,CAAlB,CAAf;AAqBA,eAAe1B,UAAf","sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { colors } from '../../Styles';\r\n\r\nclass PillButton extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <View style={(this.props.enabled || this.props.enabled == undefined) ? styles.enabled : styles.disabled}>\r\n                <TouchableOpacity\r\n                    onPress={(this.props.enabled || this.props.enabled == undefined) ? this.props.onPress : null}\r\n                    style={[styles.defaultPillButtonStyle, this.props.style, this.props.backgroundColor == null ? null : {backgroundColor: this.props.backgroundColor}]}>\r\n                    <Text numberOfLines={1} style={[styles.defaultTextStyle, this.props.textColor == null ? null : {color: this.props.textColor}]}>{this.props.text}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    defaultPillButtonStyle: {\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 5,\r\n        borderRadius: 25,\r\n        backgroundColor: colors.default.blue,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    defaultTextStyle: {\r\n        color: colors.default.white,\r\n        fontSize: 16,\r\n    },\r\n    enabled: {\r\n        opacity: 1,\r\n    },\r\n    disabled: {\r\n        opacity: 0.25,\r\n    },\r\n});\r\n\r\nexport default PillButton;\r\n"]},"metadata":{},"sourceType":"module"}